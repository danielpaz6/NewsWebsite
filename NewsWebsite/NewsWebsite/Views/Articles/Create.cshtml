@model NewsWebsite.Models.Article
@using NewsWebsite.Extensions;

@{
    ViewBag.Title = "Create";
}

<div class="col-md-8 mx-auto">
    @if (!Request.IsAuthenticated)
    {
        <span>Sorry, you must login in order to access this page.</span>
    }
    else
    {
        if (User.Identity.GetPermission() == 0)
        {
            <span>Sorry, you don't have access to reach this page.</span>
        }
        else
        {

            using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="text-center">
                    <h2>Tell your story..</h2>
                    <hr>
                </div>
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NumOfLikes, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NumOfLikes, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                            @Html.ValidationMessageFor(model => model.NumOfLikes, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ImageLink, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ImageLink, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                            @Html.ValidationMessageFor(model => model.ImageLink, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ArticleLink, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ArticleLink, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                            @Html.ValidationMessageFor(model => model.ArticleLink, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Publish" class="btn btn-success" />
                        </div>
                    </div>
                </div>
            }
            <br /><br />
            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
        }
    }
</div>